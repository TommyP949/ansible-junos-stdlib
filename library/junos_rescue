#!/usr/bin/ruby
# WANT_JSON

=begin

  DESCRIPTION:

    This module will load the "rescue" configuration.  This assumes that a rescue configuration
    has been previously saved.  
    
    (*TO-DO*: add the ability to save a rescue config to this module)
  
  ARGUMENTS:
    host        - The hostname/ip-address of the target Junos device

    user        - The login user, default from ENV['USER']
    password    - The login password.  If not provided, then ssh-key is assumed      
 
      
  RETURNS:

    changed => 'true', always

  NOTES:
      
    Junos username/password currently hardcoded; need to fix this args + ssh_keys
    
=end

require 'rubygems'
require 'json'
require 'net/netconf/jnpr'
require 'junos-ez/stdlib'

ansible_args = JSON.parse( File.read( ARGV[0] )) 

login = {}
login[:target] = ansible_args['host']
login[:username] = ansible_args['user'] || ENV['USER']
login[:password] = ansible_args['password'] || nil

ndev = Netconf::SSH.new( login )
ndev.open
Netconf::SSH.new( login ) do |ndev|
  ndev.rpc.load_configuration( :rescue => 'rescue' )
  ndev.rpc.commit_configuration
end

print JSON.dump({ 'changed' => true })
